#!/usr/bin/nft -f
flush ruleset

define port_ssh = { <%= node[:ssh][:port].join(', ') %> }
define iface_world = <%= node[:igw_router][:iface][:world] %>;
define iface_core = <%= node[:igw_router][:iface][:core] %>;
define iface_mgmt = <%= node[:igw_router][:iface][:mgmt] %>;

table inet filter {
  chain input {
    type filter hook input priority 0;

    iif lo accept

    ct state {established, related} accept
    ct state invalid drop

    ip protocol icmp accept
    ip6 nexthdr icmpv6 accept

    iif $iface_core jump input_lan
    iif $iface_mgmt jump input_lan

    jump input_world
    jump input_reject
  }
  chain input_reject {
    iif $iface_world drop
    reject with icmpx type admin-prohibited
  }
  chain input_lan {
    tcp dport $port_ssh  accept
    tcp dport {10050, 10051} accept
    ip protocol ospfigp accept
    return
  }
  chain input_world {
    return
  }

  chain forward {
    type filter hook forward priority 0;

    ct state {established, related} accept
    ct state invalid drop

    iif $iface_core jump forward_lan
    iif $iface_mgmt jump forward_lan

    jump forward_reject
    drop
  }
  chain forward_reject {
    iif $iface_world drop
    reject with icmpx type admin-prohibited
  }
  chain forward_lan {
    oif $iface_world accept
  }
  chain output {
    type filter hook output priority 0;
    accept
  }
}

table ip nat {
  chain prerouting {
    type nat hook prerouting priority 0;
  }
  chain postrouting {
    type nat hook postrouting priority 0;
    ip saddr <%= node[:site_cidr] %> oif $iface_world masquerade
    # snat x.x.x.x
  }
}

# vim:set ts=2 sw=2 et:
