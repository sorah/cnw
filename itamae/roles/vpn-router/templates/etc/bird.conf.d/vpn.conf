# vim: set ft=bird nofoldenable
ipv4 table t4_kernel_vpn;
ipv6 table t6_kernel_vpn;

protocol kernel kernel_vpn4
{
  kernel table 110;

  learn off;
  persist off;
  graceful restart on;
  scan time 100;

  ipv4 {
    table t4_kernel_vpn;
    preference 10;
    import all;
    export filter
    {
      # krt_prefsrc = ;
      accept;
    };
  };
}

protocol kernel kernel_vpn6
{
  kernel table 110;

  learn off;
  persist off;
  graceful restart on;
  scan time 100;

  ipv6 {
    table t6_kernel_vpn;
    preference 10;
    import all;
    export all;
  };
}

<%- if node[:vpn_router][:vpn_rtb4][:static] -%>
protocol static static4_kernel {
  ipv4 {
    table t4_kernel_vpn;
  };
<%= [*node[:vpn_router][:vpn_rtb4][:static]].join("\n") %>
}
<%- end -%>

<%- if node[:vpn_router][:vpn_rtb6][:static] -%>
protocol static static6_kernel {
  ipv6 {
    table t6_kernel_vpn;
  };
<%= [*node[:vpn_router][:vpn_rtb6][:static]].join("\n") %>
}
<%- end -%>

protocol pipe pipe4_vpn2kernel
{
  table t4_kernel_vpn;
  peer table t4_kernel;
# <-
  import filter
  {
<%- unless node[:vpn_router][:vpn_rtb4][:default] -%>
    if ( net = 0.0.0.0/0 ) then
    {
      reject;
    }
<%- end -%>
    accept;
  };
# ->
  export none;
}

protocol pipe pipe6_vpn2kernel
{
  table t6_kernel_vpn;
  peer table t6_kernel;
# <-
  import filter
  {
<%- unless node[:vpn_router][:vpn_rtb6][:default] -%>
    if ( net = ::/0 ) then
    {
      reject;
    }
<%- end -%>
    accept;
  };
# ->
  export none;
}
