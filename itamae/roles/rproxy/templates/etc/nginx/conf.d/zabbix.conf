upstream zabbix {
  server <%= node[:zabbix_agent].fetch(:server) %> fail_timeout=0;
  keepalive 16;
}

server {
  server_name zabbix.<%= node.fetch(:site_admin_domain) %>;

  listen [::]:80;

  listen [::]:443 ssl http2;
  include /etc/nginx/utils/tls_modern.conf;

  access_log /var/log/nginx/zabbix.access.log main;
  error_log  /var/log/nginx/zabbix.error.log error;

  include /etc/nginx/utils/httpd_alived.conf;

  auth_basic "hello";
  auth_basic_user_file /etc/nginx/htpasswd;

  location / {
    include /etc/nginx/utils/force_https.conf;

    set $corscond "$request_method,$http_origin";
    proxy_hide_header "access-control-allow-origin";
    add_header "access-control-allow-origin" "https://grafana.<%= node.fetch(:site_admin_domain) %>" always;
    add_header "access-control-allow-credentials" "true" always;

    if ( $corscond = "OPTIONS,https://grafana.<%= node.fetch(:site_admin_domain) %>" ) {
      add_header "access-control-allow-origin" "https://grafana.<%= node.fetch(:site_admin_domain) %>" always;
      add_header "access-control-allow-credentials" "true" always;
      add_header "access-control-allow-methods" "POST" always;
      add_header "access-control-allow-headers" "Content-Type" always;
      add_header "access-control-allow-max-age" "1000" always;
      return 204;
    }

    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_ssl_verify off;
    proxy_ssl_protocols TLSv1.2;
    proxy_pass http://zabbix;
  }
}
