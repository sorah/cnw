# vim: set ft=bird nofoldenable

router id <%= node[:bird][:id] %>;
log syslog { debug, trace, info, remote, warning, error, auth, fatal, bug };
debug protocols {states, interfaces};
graceful restart wait 15;

# functions
function ipv4_is_private()
{
  return net ~ [ 169.254.0.0/16+, 172.16.0.0/12+, 100.64.0.0/10+,
         192.168.0.0/16+, 10.0.0.0/8+,
         127.0.0.0/8+, 224.0.0.0/3+ ];
}

function ipv4_is_global()
{
  return !ipv4_is_private();
}

function ipv4_is_illegal_route()
{
  return net ~ [ 169.254.0.0/16+, 172.16.0.0/12+, 100.64.0.0/10+,
         192.168.0.0/16+, 10.0.0.0/8+,
         127.0.0.0/8+, 224.0.0.0/3+, 0.0.0.0/0{0,7} ];
}

function ipv6_is_illegal_route()
{
    return net ~ [ 3ffe::/16+, ::/8+, fe00::/8+, ::/128-, ::/0{0,15} ];
}

# routing tables
ipv4 table t4_kernel;
ipv4 table t4_kernel_mgmt;
ipv4 table t4_ospf;

ipv6 table t6_kernel;
ipv6 table t6_kernel_mgmt;
ipv6 table t6_ospf;

protocol device {
}

protocol kernel kernel_default4
{
  kernel table 254;

  learn on;
  persist off;
  graceful restart on;
  scan time 100;

  ipv4 {
    table t4_kernel;
    preference 10;
    import all;
    export filter
    {
      if ( proto = "direct1" ) then
      {
        reject;
      }
      # krt_prefsrc = ;
      accept;
    };
  };
}

protocol kernel kernel_mgmt4
{
  kernel table 100;

  learn on;
  persist off;
  graceful restart on;
  scan time 100;

  ipv4 {
    table t4_kernel_mgmt;
    preference 10;
    import none;
    export all;
  };
}

protocol kernel kernel_default6
{
  kernel table 100;

  learn off;
  persist off;
  graceful restart on;
  scan time 100;

  ipv6 {
    table t6_kernel;
    preference 10;
    import all;
    export filter
    {
      if ( proto = "direct1" ) then
      {
        reject;
      }
      accept;
    };
  };
}

protocol kernel kernel_mgmt6
{
  kernel table 100;

  learn off;
  persist off;
  graceful restart on;
  scan time 100;

  ipv6 {
    table t6_kernel_mgmt;
    preference 10;
    import none;
    export all;
  };
}

include "/etc/bird.conf.d/*";
